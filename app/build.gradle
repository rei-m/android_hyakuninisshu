apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.31.0"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
    // ktlint will pick them up
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

android {
    if ((new File('./signingConfigs/releaseConfig.gradle')).exists()) {
        apply from: '../signingConfigs/releaseConfig.gradle', to: android
    } else {
        signingConfigs {
            releaseConfig
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "me.rei_m.hyakuninisshu"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [crashlyticsEnabled: true]
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "d"
            manifestPlaceholders = [crashlyticsEnabled: false]
        }
        release {
            signingConfig signingConfigs.releaseConfig
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsEnabled: true]
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

apply from: rootProject.file('gradle/dependencies/dagger.gradle'), to: dependencies
apply from: rootProject.file('gradle/dependencies/test.gradle'), to: dependencies
apply from: rootProject.file('gradle/dependencies/androidTest.gradle'), to: dependencies

ext {
    multidexVersion = '2.0.1'
    crashlyticsVersion = '2.10.1'
    leakcanaryVersion = '2.2'
}

dependencies {
    implementation project(':domain')
    implementation project(':infrastructure')
    implementation project(':action')
    implementation project(':feature:corecomponent')

    implementation project(':feature:splash')

    implementation project(':feature:entrance')
    implementation project(':feature:trainingmenu')
    implementation project(':feature:exammenu')
    implementation project(':feature:materiallist')
    implementation project(':feature:support')

    implementation project(':feature:training')

    implementation project(':feature:exam')
    implementation project(':feature:examhistory')

    implementation project(':feature:quiz')

    implementation project(':feature:materialedit')
    implementation project(':feature:materialdetail')

    implementation project(':feature:karuta')

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.multidex:multidex:$multidexVersion"

    implementation "com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
}

apply plugin: 'com.google.gms.google-services'